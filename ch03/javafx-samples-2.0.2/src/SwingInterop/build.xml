<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="SwingInterop" default="default" basedir="." xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <description>Builds, tests, and runs the project SwingInterop.</description>
    
    <import file="nbproject/build-impl.xml"/>
    
    <!-- try and find JavaFX SDK -->
    <target name="find-javafx" unless="javafx.sdk">
        <property environment="env" />
        <condition property="javafx.sdk"
                    value="${env.ProgramFiles(x86)}/Oracle/JavaFX 2.0 SDK/"
                    else="${env.ProgramFiles}/Oracle/JavaFX 2.0 SDK/">
            <and>
                <contains string="${os.arch}" substring="x86"/>
                <available file="${env.ProgramFiles(x86)}/Oracle/JavaFX 2.0 SDK/rt/lib/jfxrt.jar"/>
            </and>
        </condition>
    </target>
    
    <!-- check if jfxrt.jar exists in specified JavaFX SDK directory -->
    <target name="check-javafx">
        <available file="${javafx.sdk}/rt/lib/jfxrt.jar" property="found-javafx"/>
    </target>

    <target name="javafx-missing" unless="found-javafx">
        <fail>.
            Ant could not find JavaFX 2.0 SDK. Please set [javafx.sdk] on command line:
            eg. ant -Djavafx.sdk="C:\Program Files\Oracle\JavaFX 2.0 SDK"
             or ant -Djavafx.sdk="C:\Program Files (x86)\Oracle\JavaFX 2.0 SDK"
        </fail>
    </target>
    
    <!-- When not running in netbeans try and locate JavaFX SDK -->
    <target name="-pre-init" depends="find-javafx,check-javafx" unless="netbeans-home">
        <echo message="Using JavaFX SDK: ${javafx.sdk}"/>
        <property name="javafx.tools.ant.jar"  value="${javafx.sdk}/tools/ant-javafx.jar"/>
        <property name="file.reference.jfxrt.jar"  value="${javafx.sdk}/rt/lib/jfxrt.jar"/>
        <property name="file.reference.ant-javafx.jar"  value="${javafx.sdk}/tools/ant-javafx.jar"/>
    </target>
    
    <target name="-pre-compile" depends="javafx-missing">
    </target>

    <target name="-pre-jar" depends="javafx-missing">
    </target>

    <target name="-post-jar">
        <taskdef resource="com/sun/javafx/tools/ant/antlib.xml"      
                uri="javafx:com.sun.javafx.tools.ant"
                classpath="${javafx.tools.ant.jar}"/>
                
        <!-- remove libraries as they are not needed because jfxrt.jar will be installed on the system -->
        <delete dir="${dist.dir}/lib"/>
        
        <!-- delete the jar build by netbeans as we need to build one using JavaFX packager -->
        <delete file="${dist.jar}"/>
        
        <!-- Build jar using JavaFX packager so that it has code to find installed JavaFX bundled with app -->
        <fx:jar destfile="${dist.jar}">
            <fx:application mainClass="${main.class}"/>
            <fileset dir="${build.classes.dir}"/>
            <manifest>
                <attribute name="Implementation-Vendor" value="${application.vendor}"/>
                <attribute name="Implementation-Title" value="${application.title}"/>
                <attribute name="Implementation-Version" value="1.0"/>
            </manifest>
        </fx:jar>
        
        <!-- sign application jar. Use new self signed certificate -->
        <delete file="${build.dir}/test.keystore"/>
        <genkey alias="TestAlias" 
           storepass="xyz123" keystore="${build.dir}/test.keystore"
           dname="CN=Samples, OU=JavaFX Dev, O=Oracle, C=US"/>       
        <signjar keystore="${build.dir}/test.keystore" alias="TestAlias" storepass="xyz123">
            <fileset file="${dist.jar}"/>
        </signjar>
        
        <!-- This is Swing applet/app => We need to use preFX JNLP/html -->
        <copy todir="${basedir}/dist">
            <fileset dir="${basedir}/web"/>
        </copy>
    </target>
</project>
